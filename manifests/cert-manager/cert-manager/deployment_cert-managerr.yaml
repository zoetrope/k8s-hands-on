# Source: cert-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-managerr
  namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-managerr
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.15.3"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.15.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-managerr
      app.kubernetes.io/component: "controller"
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: cert-managerr
        app.kubernetes.io/component: "controller"
        app.kubernetes.io/version: "v1.15.3"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.15.3
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: cert-managerr
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: cert-manager-controller
        image: "quay.io/jetstack/cert-manager-controller:v1.15.3"
        imagePullPolicy: IfNotPresent
        args:
        - --v=2
        - --cluster-resource-namespace=$(POD_NAMESPACE)
        - --leader-election-namespace=kube-system
        - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.15.3
        - --max-concurrent-challenges=60
        ports:
        - containerPort: 9402
          name: http-metrics
          protocol: TCP
        - containerPort: 9403
          name: http-healthz
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # LivenessProbe settings are based on those used for the Kubernetes
        # controller-manager. See:
        # https://github.com/kubernetes/kubernetes/blob/806b30170c61a38fedd54cc9ede4cd6275a1ad3b/cmd/kubeadm/app/util/staticpod/utils.go#L241-L245
        livenessProbe:
          httpGet:
            port: http-healthz
            path: /livez
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 8
      nodeSelector:
        kubernetes.io/os: linux
